<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.32">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.8"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.8">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.68">
    <script>pipeline {
    agent any

    
    stages {

        stage(&apos;Initialize &amp; Cleanup Workspace&apos;) {
            steps {
               echo &apos;Initialize &amp; Cleanup Workspace&apos;
               sh &apos;ls -la&apos;
               sh &apos;rm -rf *&apos;
               sh &apos;rm -rf .git&apos;
               sh &apos;rm -rf .gitignore&apos;
               sh &apos;ls -la&apos;
            }
        }

        stage(&apos;Git Clone&apos;) {
            steps {
                git url: &apos;https://github.com/snyk/goof.git&apos;
                sh &apos;ls -la&apos;
            }
        }

        
        // Run snyk test to check for vulnerabilities and fail the build if any are found
        // Consider using --severity-threshold=&lt;low|medium|high&gt; for more granularity (see snyk help for more info).
        stage(&apos;Snyk Test using Snyk CLI&apos;) {
            steps {
                snykSecurity snykInstallation: &apos;snyk&apos;, snykTokenId: &apos;snyk&apos;
            }
        }

        
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>